/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />

import * as TruffleContracts from ".";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "BEP20"): TruffleContracts.BEP20Contract;
      require(name: "BStablePool"): TruffleContracts.BStablePoolContract;
      require(name: "BStableProxy"): TruffleContracts.BStableProxyContract;
      require(name: "BStableToken"): TruffleContracts.BStableTokenContract;
      require(
        name: "BStableTokenForTest"
      ): TruffleContracts.BStableTokenForTestContract;
      require(
        name: "BStableTokenForTestDEV"
      ): TruffleContracts.BStableTokenForTestDEVContract;
      require(name: "IBEP20"): TruffleContracts.IBEP20Contract;
      require(name: "IBNB"): TruffleContracts.IBNBContract;
      require(name: "IBStablePool"): TruffleContracts.IBStablePoolContract;
      require(name: "IBStableProxy"): TruffleContracts.IBStableProxyContract;
      require(name: "IBStableToken"): TruffleContracts.IBStableTokenContract;
      require(
        name: "ISmartSwapCallee"
      ): TruffleContracts.ISmartSwapCalleeContract;
      require(
        name: "ISmartSwapExchange"
      ): TruffleContracts.ISmartSwapExchangeContract;
      require(
        name: "ISmartSwapFactory"
      ): TruffleContracts.ISmartSwapFactoryContract;
      require(name: "ISmartSwapPool"): TruffleContracts.ISmartSwapPoolContract;
      require(name: "Ownable"): TruffleContracts.OwnableContract;
      require(
        name: "ReentrancyGuard"
      ): TruffleContracts.ReentrancyGuardContract;
      require(name: "SmartSwapPool"): TruffleContracts.SmartSwapPoolContract;
      require(
        name: "SmartSwapPool02"
      ): TruffleContracts.SmartSwapPool02Contract;
      require(
        name: "SmartSwapPool03"
      ): TruffleContracts.SmartSwapPool03Contract;
      require(name: "StableCoin"): TruffleContracts.StableCoinContract;
      require(name: "StableSwapPool"): TruffleContracts.StableSwapPoolContract;
    }
  }
}
